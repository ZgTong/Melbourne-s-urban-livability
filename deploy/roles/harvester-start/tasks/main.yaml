
# Create a database configure directory
- name: Create database config directory
  become: yes
  file:
    path: "/home/ubuntu/Melbourne-s-urban-livability/tweet_harvesting/config"
    recurse: yes
    state: directory

# Copy database configuration
- name: Copy database configuration to project repo
  become: yes
  copy:
    src: "config/{{inventory_hostname}}/dbconfig.py"
    dest: "/home/ubuntu/Melbourne-s-urban-livability/tweet_harvesting/config/dbconfig.py"

# Copy Twitter api token
- name: Copy Twitter api token to project repo
  become: yes
  copy:
    src: "config/{{inventory_hostname}}/credential.py"
    dest: "/home/ubuntu/Melbourne-s-urban-livability/tweet_harvesting/config/credential.py"

# Clear running harvester container
- name: Clear harvester container
  docker_container:
    name: harvester
    state: absent
  become: yes

# Clear exsiting harvester image
- name: Remove image
  docker_image:
    state: absent
    name: grp28/harvester
  become: yes

# Create harvester docker image 
- name: Create harvester docker image 
  docker_image:
    build:
      path: "/home/ubuntu/Melbourne-s-urban-livability/tweet_harvesting/"
      pull: yes
    name: grp28/harvester
    source: build
  become: yes

# Run Harvester
- name: Run harvester
  docker_container:
    name: harvester
    image: grp28/harvester
    state: started
    restart: true
    recreate: true
    restart_policy: on-failure
    restart_retries: 5
  become: yes
  
# - name: Run harvester by shell command
#   ansible.builtin.shell:
#     cmd: docker run -d --name harvester_shell --restart=on-failure:5 grp28/harvester
#     chdir: /home/ubuntu/project/tweet_harvesting/
#   become: yes